{"version":3,"sources":["views/Home.js","views/BobaAbout.js","views/BobaFeed.js","views/BobaMap.js","views/BobaLogin.js","components/BobaDrawer.js","components/BobaToolbar.js","App.js","serviceWorker.js","index.js"],"names":["Home","classes","this","props","react_default","a","createElement","className","classNames","container","index_es","variant","color","Component","withStyles","display","flexDirection","justifyContent","alignItems","BobaAbout","BobaFeed","BobaMap","BobaLogin","BobaToolbar","handleItemClicked","selectedIndex","nextPath","_this","history","push","_this2","_this$props","isOpened","needsClose","anchor","paper","drawer","open","onClose","toolbar","button","onClick","icons_index_es","primary","withRouter","theme","width","mixins","onMenuClicked","appBar","position","title","menuButton","loginButton","component","Link","to","loginButtonIcon","textAlign","zIndex","marginRight","spacing","unit","fontSize","left","right","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","toggleDrawer","isDrawerOpen","state","setState","BrowserRouter","components_BobaToolbar","BobaDrawer","Route","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8e5140a8.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { withStyles, Typography } from '@material-ui/core';\nimport classNames from 'classname';\n\nimport '../styles/global.css';\n\nconst styles = {\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n  }\n}\n\nclass Home extends Component {\n  render() {\n    const { classes } = this.props;\n    return (\n      <div className={classNames('fillParent', classes.container)}>\n        <Typography\n          variant=\"h6\" \n          color=\"inherit\">\n        Home\n        </Typography>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(Home);\n","import React, { Component } from 'react';\nimport { withStyles, Typography } from '@material-ui/core';\nimport classNames from 'classname';\n\nimport '../styles/global.css';\n\nconst styles = {\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center'\n  }\n}\n\nclass BobaAbout extends Component {\n  render() {\n    const { classes } = this.props;\n    return (\n      <div className={classNames('fillParent', classes.container)}>\n        <Typography\n          variant=\"h6\" \n          color=\"inherit\">\n        About\n        </Typography>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(BobaAbout);\n","import React, { Component } from 'react';\nimport { withStyles, Typography } from '@material-ui/core';\nimport classNames from 'classname';\n\nimport '../styles/global.css';\n\nconst styles = {\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center'\n  }\n}\n\nclass BobaFeed extends Component {\n  render() {\n    const { classes } = this.props;\n    return (\n      <div className={classNames('fillParent', classes.container)}>\n        <Typography\n          variant=\"h6\" \n          color=\"inherit\">\n        Feed\n        </Typography>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(BobaFeed);\n","import React, { Component } from 'react';\nimport { withStyles, Typography } from '@material-ui/core';\nimport classNames from 'classname';\n\nimport '../styles/global.css';\n\nconst styles = {\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center'\n  }\n}\n\nclass BobaMap extends Component {\n  render() {\n    const { classes } = this.props;\n    return (\n      <div className={classNames('fillParent', classes.container)}>\n        <Typography\n          variant=\"h6\" \n          color=\"inherit\">\n        Map\n        </Typography>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(BobaMap);\n","import React, { Component } from 'react';\nimport { withStyles, Typography } from '@material-ui/core';\nimport classNames from 'classname';\n\nimport '../styles/global.css';\n\nconst styles = {\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center'\n  }\n}\n\nclass BobaLogin extends Component {\n  render() {\n    const { classes } = this.props;\n    return (\n      <div className={classNames('fillParent', classes.container)}>\n        <Typography\n          variant=\"h6\" \n          color=\"inherit\">\n        Login\n        </Typography>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(BobaLogin);\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router';\nimport { Drawer, List, ListItem, ListItemIcon, ListItemText, withStyles } from '@material-ui/core';\nimport { Help, Home, Map, ViewAgenda } from '@material-ui/icons';\n\nconst styles = theme => ({\n  drawer: {\n    width: 240,\n  },\n  toolbar: theme.mixins.toolbar,\n});\n\nclass BobaToolbar extends Component {\n  handleItemClicked = (selectedIndex) => {\n    var nextPath = '';\n    \n    switch (selectedIndex) {\n      case 0:\n        nextPath = '/';\n        break;\n      case 1:\n        nextPath = '/map';\n        break;\n      case 2:\n        nextPath = '/feed';\n        break;\n      case 3:\n        nextPath = '/about';\n        break;\n      default:\n        break;\n    }\n\n    this.props.history.push(nextPath);\n  }\n\n  render() {\n    const { classes, isOpened, needsClose } = this.props;\n    return (\n      <Drawer\n        anchor=\"left\"\n        classes={{ paper: classes.drawer }}\n        open={isOpened}\n        onClose={needsClose}>\n        <div className={classes.toolbar} />\n        <List>\n          <ListItem\n            button\n            onClick={() => this.handleItemClicked(0)}>\n            <ListItemIcon>\n              <Home />\n            </ListItemIcon>\n            <ListItemText primary='Home' />\n          </ListItem>\n          <ListItem \n            button\n            onClick={() => this.handleItemClicked(1)}>\n            <ListItemIcon>\n              <Map />\n            </ListItemIcon>\n            <ListItemText primary='Map' />\n          </ListItem>\n          <ListItem \n            button\n            onClick={() => this.handleItemClicked(2)}>\n            <ListItemIcon>\n              <ViewAgenda />\n            </ListItemIcon>\n            <ListItemText primary='Feed' />\n          </ListItem>\n          <ListItem \n            button\n            onClick={() => this.handleItemClicked(3)}>\n            <ListItemIcon>\n              <Help />\n            </ListItemIcon>\n            <ListItemText primary='About' />\n          </ListItem>\n        </List>\n      </Drawer>\n    );\n  }\n}\n\nexport default withRouter(withStyles(styles)(BobaToolbar));\n// withRouter needed if you're routing using Javascript\n// (i.e. calling this.props.history.push())\n","import React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\nimport { AppBar, Button, IconButton, Toolbar, Typography, withStyles } from '@material-ui/core';\nimport { Person, Menu } from '@material-ui/icons';\n\n// Here, we're declaring a style class and applying it using withStyles() at the\n// bottom. This is a special feature of Material UI which is essentially the\n// same as creating a \"BobaToolbar.css\" and importing it.\nconst styles = theme => ({\n  appBar: {\n    textAlign: 'center',\n    zIndex: 1400,\n  },\n  loginButtonIcon: {\n    marginRight: theme.spacing.unit,\n    fontSize: 20,\n  },\n  toolbar: {\n    justifyContent: 'space-between'\n  },\n  title: {\n    position: 'absolute',\n    left: 0,\n    right: 0\n  }\n});\n\nclass BobaToolbar extends Component {\n  render() {\n    const { classes, onMenuClicked } = this.props;\n    return (\n      <AppBar\n        className={classes.appBar}\n        position=\"fixed\">\n        <Toolbar className={classes.toolbar}>\n          <Typography \n              variant=\"h6\" \n              color=\"inherit\"\n              className={classes.title}>\n              Boba Spotter (Beta)\n            </Typography>\n          <IconButton\n            className={classes.menuButton}\n            color=\"inherit\" \n            onClick={onMenuClicked}>\n            <Menu />\n          </IconButton>\n          <Button\n            color=\"inherit\"\n            className={classes.loginButton}\n            component={Link}\n            to=\"/login\">\n            <Person className={classes.loginButtonIcon}/>\n            Login\n          </Button>\n        </Toolbar>\n      </AppBar>\n    );\n  }\n}\n\nexport default withStyles(styles)(BobaToolbar);\n","import React, { Component } from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\n\nimport Home from './views/Home';\nimport BobaAbout from './views/BobaAbout';\nimport BobaFeed from './views/BobaFeed';\nimport BobaMap from './views/BobaMap';\nimport BobaLogin from './views/BobaLogin';\n\nimport BobaDrawer from './components/BobaDrawer';\nimport BobaToolbar from './components/BobaToolbar';\n\nimport './App.css';\nimport './styles/global.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isDrawerOpen: false,\n    }\n  }\n\n  toggleDrawer = () => {\n    let { isDrawerOpen } = this.state;\n    \n    isDrawerOpen = !isDrawerOpen;\n\n    this.setState({ isDrawerOpen });\n\n    // Woah woah woah, what's this syntax? Turns out Javascript has some tricks\n    // that reduce redundancy in your code. I'm explaining it here, because you \n    // might see it in examples and code samples online. These include:\n    //\n    // Destructuring Assignment Shorthand\n    //     let { isDrawerOpen } = this.state;\n    //     is the same as: let isDrawerOpen = this.state.isDrawerOpen;\n    //\n    // Object Property Value Shorthand\n    //     this.setState({ isDrawerOpen });\n    //     is the same as: this.setState({ isDrawerOpen: isDrawerOpen });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <BrowserRouter>\n          <div className=\"fillParent\">\n            <BobaToolbar onMenuClicked={this.toggleDrawer} />\n            <BobaDrawer\n              isOpened={this.state.isDrawerOpen}\n              needsClose={this.toggleDrawer} />\n            <Route exact path=\"/\" component={Home} />\n            <Route path=\"/feed\" component={BobaFeed} />\n            <Route path=\"/map\" component={BobaMap} />\n            <Route path=\"/about\" component={BobaAbout} />\n            <Route path=\"/login\" component={BobaLogin} />\n          </div>\n        </BrowserRouter>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}